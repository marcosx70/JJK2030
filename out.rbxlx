<roblox version="4">
  <Item class="ReplicatedStorage" referent="0">
    <Properties>
      <string name="Name">ReplicatedStorage</string>
    </Properties>
    <Item class="Folder" referent="1">
      <Properties>
        <string name="Name">Remotes</string>
      </Properties>
      <Item class="Folder" referent="2">
        <Properties>
          <string name="Name">Combat</string>
          <string name="Name">Combat</string>
        </Properties>
        <Item class="RemoteEvent" referent="3">
          <Properties>
            <string name="Name">PerfectDodge</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="4">
          <Properties>
            <string name="Name">Dash</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="5">
          <Properties>
            <string name="Name">Parry</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="6">
          <Properties>
            <string name="Name">Counter</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="7">
          <Properties>
            <string name="Name">HitConfirm</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="8">
          <Properties>
            <string name="Name">AirLaunch</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="9">
          <Properties>
            <string name="Name">AirPursuit</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="10">
          <Properties>
            <string name="Name">Grab</string>
          </Properties>
        </Item>
        <Item class="RemoteEvent" referent="11">
          <Properties>
            <string name="Name">FinishRitual</string>
          </Properties>
        </Item>
        <Item class="RemoteFunction" referent="12">
          <Properties>
            <string name="Name">RequestDamage</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="Folder" referent="13">
      <Properties>
        <string name="Name">Shared</string>
      </Properties>
      <Item class="Folder" referent="14">
        <Properties>
          <string name="Name">Example</string>
        </Properties>
        <Item class="ModuleScript" referent="15">
          <Properties>
            <string name="Name">Counter</string>
            <string name="Source"><![CDATA[--!strict
export type Counter = { value: number, Inc: (Counter)->(), Destroy: (Counter)->() }
local C = {}; C.__index = C
function C.new(): Counter return setmetatable({ value = 0 }, C) end
function C:Inc() self.value += 1 end
function C:Destroy() end
return C
]]></string>
          </Properties>
        </Item>
      </Item>
      <Item class="Folder" referent="16">
        <Properties>
          <string name="Name">Systems</string>
        </Properties>
        <Item class="ModuleScript" referent="17">
          <Properties>
            <string name="Name">InputConfig</string>
            <string name="Source">--!strict
export type Bind = { Name: string, Keycode: Enum.KeyCode }
export type Keymap = { [string]: Bind }

local Defaults: Keymap = {
	Dash = { Name = "Dash", Keycode = Enum.KeyCode.Q },
	M1 = { Name = "M1", Keycode = Enum.KeyCode.ButtonR2 },
}
local M = {}
function M.GetDefaults(): Keymap return Defaults end
return M</string>
          </Properties>
        </Item>
        <Item class="ModuleScript" referent="18">
          <Properties>
            <string name="Name">StateManager</string>
            <string name="Source"><![CDATA[--!strict
export type State = "Idle"|"M1"|"M2"|"Dash"|"Air"|"Stunned"|"Downed"
export type StateManager = { state: State, Set: (self:any, s: State)->(), Get: (self:any)->State, Destroy:(self:any)->() }

local SM = {}; SM.__index = SM
function SM.new(initial: State?): StateManager
	return setmetatable({ state = initial or "Idle" }, SM)
end
function SM:Set(s: State) self.state = s end
function SM:Get(): State return self.state end
function SM:Destroy() end
return SM
]]></string>
          </Properties>
        </Item>
        <Item class="ModuleScript" referent="19">
          <Properties>
            <string name="Name">StyleLoader</string>
            <string name="Source"><![CDATA[--!strict
local StyleLoader = {}
function StyleLoader.Load(styleName: string)
	-- later: load per-style assets/animations
	return { Name = styleName }
end
return StyleLoader
]]></string>
          </Properties>
        </Item>
      </Item>
      <Item class="Folder" referent="20">
        <Properties>
          <string name="Name">Types</string>
        </Properties>
        <Item class="ModuleScript" referent="21">
          <Properties>
            <string name="Name">CombatTypes</string>
            <string name="Source"></string>
          </Properties>
        </Item>
      </Item>
    </Item>
  </Item>
  <Item class="ServerScriptService" referent="22">
    <Properties>
      <string name="Name">ServerScriptService</string>
    </Properties>
    <Item class="Folder" referent="23">
      <Properties>
        <string name="Name">Server</string>
      </Properties>
      <Item class="Script" referent="24">
        <Properties>
          <string name="Name">KeybindSaver</string>
          <token name="RunContext">0</token>
          <string name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local DataStoreService = game:GetService("DataStoreService")
local store = DataStoreService:GetDataStore("Keybinds:v1")

Players.PlayerRemoving:Connect(function(plr)
	local ok, err = pcall(function()
		local keymap = plr:FindFirstChild("_Keymap")
		if keymap then store:SetAsync(plr.UserId, keymap.Value) end
	end)
	if not ok then warn("Keybind save failed", plr, err) end
end)
]]></string>
        </Properties>
      </Item>
      <Item class="Script" referent="25">
        <Properties>
          <string name="Name">TestRunner</string>
          <token name="RunContext">0</token>
          <string name="Source"><![CDATA[--!strict
local RunService = game:GetService("RunService")
if not RunService:IsStudio() then return end -- don't run tests on live servers

local RS = game:GetService("ReplicatedStorage")
local TestEZ = require(RS.Packages.TestEZ)
local Tests = RS:WaitForChild("Tests")

local results = TestEZ.TestBootstrap:run({ Tests }, TestEZ.Reporters.TextReporter)
if results.failureCount > 0 then
    warn(("TestEZ: %d failed, %d skipped"):format(results.failureCount, results.skippedCount))
else
    print(("TestEZ: %d passed ðŸŽ‰"):format(results.successCount))
end
]]></string>
        </Properties>
      </Item>
    </Item>
  </Item>
  <Item class="StarterGui" referent="26">
    <Properties>
      <string name="Name">StarterGui</string>
    </Properties>
    <Item class="Folder" referent="27">
      <Properties>
        <string name="Name">UI</string>
      </Properties>
    </Item>
  </Item>
  <Item class="StarterPlayer" referent="28">
    <Properties>
      <string name="Name">StarterPlayer</string>
    </Properties>
    <Item class="StarterCharacterScripts" referent="29">
      <Properties>
        <string name="Name">StarterCharacterScripts</string>
      </Properties>
    </Item>
    <Item class="StarterPlayerScripts" referent="30">
      <Properties>
        <string name="Name">StarterPlayerScripts</string>
      </Properties>
      <Item class="LocalScript" referent="31">
        <Properties>
          <string name="Name">PlayerMovementController</string>
          <string name="Source"><![CDATA[--!strict
local UIS = game:GetService("UserInputService")
local RS = game:GetService("ReplicatedStorage")
local Remotes = RS:WaitForChild("Remotes")
local Combat = Remotes:WaitForChild("Combat")
local PerfectDodge = Combat:WaitForChild("PerfectDodge") :: RemoteEvent

local lastDash = 0
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.Q then
		local t = os.clock()
		if t - lastDash > 0.35 then
			lastDash = t
			PerfectDodge:FireServer({ t = t })
		end
	end
end)
]]></string>
        </Properties>
      </Item>
    </Item>
  </Item>
</roblox>